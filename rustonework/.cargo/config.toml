[target.x86_64-pc-windows-gnu]
rustflags = ["-C", "link-arg=-s"]
linker = "x86_64-w64-mingw32-gcc"

[target.x86_64-unknown-linux-gnu]
rustflags = [
    "-C",
    "link-arg=-s", # stripped
]

[target.x86_64-unknown-linux-musl]
rustflags = ["-C", "link-arg=-s",
"-C", "target-feature=+crt-static"]
linker = "x86_64-linux-musl-gcc"

[profile.release]
# 剥离（strip）可执行文件中的调试符号和其他不必要的信息
strip = true
# 使用panic = 'abort'来替换默认的panic处理方式，这样在出现panic时，程序不会进行清理操作，可以减小体积和运行时间
panic = 'abort'
# lto（链接时优化）来进一步减小体积
lto = true      # 链接时优化
# 这个配置指定在编译期间生成代码的单元数量。它的值为1，表示只生成一个代码单元。
# 通过减少代码单元的数量，可以提高编译速度和减小最终生成的可执行文件的大小。然而，这可能会导致一些性能损失。
codegen-units = 1
# 这个配置用于指定优化级别，通常有0、1、2、3、s、z几种。在这里，"z"表示最小化优化，这意味着编译器将尽可能地减小体积，
# 但可能会降低性能。 Debug模式，缺省使用0，Release模式缺省是3。
opt-level = "z"
# incremental = false
